{"version":3,"sources":["components/Barr.js","components/PictureCard2.js","components/Img.js","components/Footer.js","components/Home.js","components/Aboutus.js","serviceWorker.js","redux/store.js","index.js","App.js"],"names":["Barr","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","Button","PictureCard2","props","useDispatch","useSelector","state","form","style","backgroundImage","img","weight","toString","replace","name","items","src","Example","UncontrolledCarousel","Footer","color","fluid","Date","getFullYear","Home","bears","dispatch","getBears","a","axios","get","result","action","type","data","useEffect","length","Img","map","bear","index","key","margin","updateBear","id","deleteBear","Aboutus","target","Boolean","window","location","hostname","match","initialForm","weigth","rootReducer","combineReducers","filter","store","createStore","ReactDOM","render","path","component","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.91508513.chunk.js","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Button, Form } from 'react-bootstrap'\n\n\nconst Barr = () => {\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/aboutus\">About us</Nav.Link>\n        </Nav>\n        <Form inline>\n          <Button variant=\"success\" href=\"/\">Online</Button>\n        </Form>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default Barr","import React from 'react';\nimport './BearCard.css';\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst PictureCard2 = props => {\n\n    const dispatch = useDispatch()\n    const form = useSelector(state => state.form)\n    return (\n        <div className='bearcard-container'>\n            <div className='bearcard' style={{ backgroundImage: `url('${props.img}')` }}>\n                <p className='bearcard-weight'>{props.weight.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')} ฿</p>\n                <p className='bearcard-name'>{props.name}</p>\n\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default PictureCard2;","\nimport React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\n\nconst items = [\n  {\n    src: '../img1.jpg',\n    \n  },\n  {\n    src: '../img2.jpg',\n  \n  },\n  {\n    src: '../img3.jpg',\n  \n  }\n];\n\nconst Example = () => <UncontrolledCarousel items={items} />;\n\nexport default Example;","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter, MDBIcon } from \"mdbreact\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst Footer = () => {\n    return (\n\n        <MDBFooter color=\"elegant-color-dark\" className=\"font-small darken-3 pt-0\">\n            <MDBContainer>\n                <MDBRow>\n                   \n                </MDBRow>\n            </MDBContainer>\n            <div className=\"footer-copyright text-center py-3\">\n                <MDBContainer fluid>\n                    &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                    <a href=\"/\"> AR FurniShop </a>\n                </MDBContainer>\n            </div>\n        </MDBFooter>\n    );\n}\n\nexport default Footer;","import React, { useEffect } from 'react';\nimport PictureCard2 from './PictureCard2.js';\nimport './BearList.css';\nimport axios from 'axios'\nimport Img from './Img'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Footer from './Footer.js';\n\n\nconst Home = props => {\n    const bears = useSelector(state => state.bears);\n    const dispatch = useDispatch();\n\n    const getBears = async () => {\n        const result = await axios.get(`https://arcane-fortress-47947.herokuapp.com/api/bears`)\n        const action = { type: 'GET_BEARS', bears: result.data }\n        dispatch(action)\n    }\n\n    useEffect(() => {\n        getBears()\n    }, [])\n\n    if (!bears || !bears.length)\n        return (<h2>No Furniture</h2>)\n\n\n    return (\n\n        <div>\n                   <Img/>\n\n           <br/> <h1 className=\"text-center\">Furniture list</h1>\n            <div className='bearlist-container'>\n\n                {\n                    bears.map((bear, index) => (\n\n                        <div key={index} style={{ margin: 40 }}>\n\n\n                            <PictureCard2  {...bear} updateBear={() => props.updateBear(bear.id)} deleteBear={() => props.deleteBear(bear.id)} />\n                        </div>\n                    ))\n                }\n\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './Footer';\nimport './BearCard.css'\n\nconst Aboutus = () => {\n\n    return (\n        <div className=\"text-center\">\n\n            &nbsp;\n            <br />\n            <br />\n            <img src='logoo.png' />\n\n            <br />\n            <br />\n\n            <div className=\"hh\">\n                <h2>ถ้าต้องการดาวน์โหลดแอปพลิเคชันในรูปแบบ AR สามารถติดต่อได้ด้านล่างนี้เลย</h2>\n            </div>\n            <br />\n\n            <h2> <a href=\"https://www.facebook.com/man.prompen\" target=\"_blank\">คลิก</a> </h2><br />\n\n            <br />\n            <br />\n\n            <br />\n\n            <br />\n\n            <br />\n\n            <br />\n            <br />\n            <br />\n\n\n            <Footer />\n        </div>\n    )\n}\nexport default Aboutus;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux'\nimport { act } from 'react-dom/test-utils';\n\nconst initialForm = {\n    name: \"\",\n    weigth: 0,\n    img: \"\"\n}\nconst formReducer = (data = initialForm, action) => {\n    switch (action.type) {\n        case \"CHANGE_NAME\": return { ...data, name: action.name }\n        case \"CHANGE_WEIGHT\": return { ...data, weight: action.weight }\n        case \"CHANGE_IMG\": return { ...data, img: action.img }\n        //...data mean ==> each [name: \"\", weigth: 0, img: \"\"]\n    }\n    return data; //less than return itSelf\n}\n\nconst bearReducer = (bears = [], action) => {\n    switch (action.type) {\n        case \"GET_BEARS\": return action.bears\n        case \"ADD_BEAR\": return [...bears, action.bear];\n        case \"DELETE_BEAR\" : return bears.filter( bear => +bear.id !== +action.id )\n        case \"UPDATE_BEAR\" : return bears.map(bear => {\n            if (+bear.id === +action.id ){\n                return action.bear\n            }\n            else\n                return bear \n        })\n    }\n    return bears; //less than return itSelf\n}\n\nconst rootReducer = combineReducers({\n    bears:bearReducer,\n    form:formReducer,\n})\nexport const store = createStore(rootReducer);","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport { BrowserRouter, Router, Route, Link } from 'react-router-dom'\nimport ReactDOM, { render } from 'react-dom';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter, Route, Link, Router, Redirect } from 'react-router-dom';\n\n// import BearList from './components/BearList'\n// import InputForm from './components/InputForm';\nimport Barr from './components/Barr';\nimport Home from './components/Home';\nimport Aboutus from './components/Aboutus'\nexport default () => {\n\n  return (\n    <div>\n        <Route path=\"/\" component={Barr} />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/aboutus\" component={Aboutus} />\n\n    </div>\n  )\n}\n"],"sourceRoot":""}