{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport { act } from 'react-dom/test-utils';\nconst initialForm = {\n  name: \"\",\n  weigth: 0,\n  img: \"\"\n};\n\nconst formReducer = (data = initialForm, action) => {\n  switch (action.type) {\n    case \"CHANGE_NAME\":\n      return { ...data,\n        name: action.name\n      };\n\n    case \"CHANGE_WEIGHT\":\n      return { ...data,\n        weight: action.weight\n      };\n\n    case \"CHANGE_IMG\":\n      return { ...data,\n        img: action.img\n      };\n    //...data mean ==> each [name: \"\", weigth: 0, img: \"\"]\n  }\n\n  return data; //less than return itSelf\n};\n\nconst bearReducer = (bears = [], action) => {\n  switch (action.type) {\n    case \"GET_BEARS\":\n      return action.bears;\n\n    case \"ADD_BEAR\":\n      return [...bears, action.bear];\n\n    case \"DELETE_BEAR\":\n      return bears.filter(bear => +bear.id !== +action.id);\n\n    case \"UPDATE_BEAR\":\n      return bears.map(bear => {\n        if (+bear.id === +action.id) {\n          return action.bear;\n        } else return bear;\n      });\n  }\n\n  return bears; //less than return itSelf\n};\n\nconst rootReducer = combineReducers({\n  bears: bearReducer,\n  form: formReducer\n});\nexport const store = createStore(rootReducer);","map":{"version":3,"sources":["/Users/wrmtpp/Desktop/AR FurniShop/react-bear/src/redux/store.js"],"names":["createStore","combineReducers","act","initialForm","name","weigth","img","formReducer","data","action","type","weight","bearReducer","bears","bear","filter","id","map","rootReducer","form","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,MAAM,EAAE,CAFQ;AAGhBC,EAAAA,GAAG,EAAE;AAHW,CAApB;;AAKA,MAAMC,WAAW,GAAG,CAACC,IAAI,GAAGL,WAAR,EAAqBM,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGF,IAAL;AAAWJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAAxB,OAAP;;AACpB,SAAK,eAAL;AAAsB,aAAO,EAAE,GAAGI,IAAL;AAAWG,QAAAA,MAAM,EAAEF,MAAM,CAACE;AAA1B,OAAP;;AACtB,SAAK,YAAL;AAAmB,aAAO,EAAE,GAAGH,IAAL;AAAWF,QAAAA,GAAG,EAAEG,MAAM,CAACH;AAAvB,OAAP;AACnB;AAJJ;;AAMA,SAAOE,IAAP,CAPgD,CAOnC;AAChB,CARD;;AAUA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaJ,MAAb,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB,aAAOD,MAAM,CAACI,KAAd;;AAClB,SAAK,UAAL;AAAiB,aAAO,CAAC,GAAGA,KAAJ,EAAWJ,MAAM,CAACK,IAAlB,CAAP;;AACjB,SAAK,aAAL;AAAqB,aAAOD,KAAK,CAACE,MAAN,CAAcD,IAAI,IAAI,CAACA,IAAI,CAACE,EAAN,KAAa,CAACP,MAAM,CAACO,EAA3C,CAAP;;AACrB,SAAK,aAAL;AAAqB,aAAOH,KAAK,CAACI,GAAN,CAAUH,IAAI,IAAI;AAC1C,YAAI,CAACA,IAAI,CAACE,EAAN,KAAa,CAACP,MAAM,CAACO,EAAzB,EAA6B;AACzB,iBAAOP,MAAM,CAACK,IAAd;AACH,SAFD,MAII,OAAOA,IAAP;AACP,OAN2B,CAAP;AAJzB;;AAYA,SAAOD,KAAP,CAbwC,CAa1B;AACjB,CAdD;;AAgBA,MAAMK,WAAW,GAAGjB,eAAe,CAAC;AAChCY,EAAAA,KAAK,EAACD,WAD0B;AAEhCO,EAAAA,IAAI,EAACZ;AAF2B,CAAD,CAAnC;AAIA,OAAO,MAAMa,KAAK,GAAGpB,WAAW,CAACkB,WAAD,CAAzB","sourcesContent":["import { createStore, combineReducers } from 'redux'\nimport { act } from 'react-dom/test-utils';\n\nconst initialForm = {\n    name: \"\",\n    weigth: 0,\n    img: \"\"\n}\nconst formReducer = (data = initialForm, action) => {\n    switch (action.type) {\n        case \"CHANGE_NAME\": return { ...data, name: action.name }\n        case \"CHANGE_WEIGHT\": return { ...data, weight: action.weight }\n        case \"CHANGE_IMG\": return { ...data, img: action.img }\n        //...data mean ==> each [name: \"\", weigth: 0, img: \"\"]\n    }\n    return data; //less than return itSelf\n}\n\nconst bearReducer = (bears = [], action) => {\n    switch (action.type) {\n        case \"GET_BEARS\": return action.bears\n        case \"ADD_BEAR\": return [...bears, action.bear];\n        case \"DELETE_BEAR\" : return bears.filter( bear => +bear.id !== +action.id )\n        case \"UPDATE_BEAR\" : return bears.map(bear => {\n            if (+bear.id === +action.id ){\n                return action.bear\n            }\n            else\n                return bear \n        })\n    }\n    return bears; //less than return itSelf\n}\n\nconst rootReducer = combineReducers({\n    bears:bearReducer,\n    form:formReducer,\n})\nexport const store = createStore(rootReducer);"]},"metadata":{},"sourceType":"module"}